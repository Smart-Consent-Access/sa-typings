/**
 * @ao/ah-api
 * Telia Smart Access API
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { SearchConsentRequestsDTOFields } from './SearchConsentRequestsDTOFields';
import { SearchConsentsDTOSort } from './SearchConsentsDTOSort';
import { HttpFile } from '../http/http';

/**
* Specifies the search parameters to use in the search for consent requests
*/
export class SearchConsentRequestsDTO {
    /**
    * Pagination: Number of items to skip over in the complete search result (offset). Leave out to start from the first item
    */
    'skip'?: number;
    /**
    * Pagination: Number of items to take beginning from skip (0-based index). Leave out to take all
    */
    'take'?: number;
    /**
    * String to search for in consent requests. The following data will be searched to contain the string - Resources, actions, conditions and legal entity (id and name).  If the string matches any (OR) of these then its a search hit. An empty string matches all. Leave out to only apply the filters (fields)
    */
    'searchQuery'?: string;
    'fields': SearchConsentRequestsDTOFields;
    'sort'?: SearchConsentsDTOSort;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "skip",
            "baseName": "skip",
            "type": "number",
            "format": "double"
        },
        {
            "name": "take",
            "baseName": "take",
            "type": "number",
            "format": "double"
        },
        {
            "name": "searchQuery",
            "baseName": "searchQuery",
            "type": "string",
            "format": ""
        },
        {
            "name": "fields",
            "baseName": "fields",
            "type": "SearchConsentRequestsDTOFields",
            "format": ""
        },
        {
            "name": "sort",
            "baseName": "sort",
            "type": "SearchConsentsDTOSort",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return SearchConsentRequestsDTO.attributeTypeMap;
    }
    
    public constructor() {
    }
}

